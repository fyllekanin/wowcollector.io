package main

import (
	"context"
	"net/http"
	"os"

	"github.com/go-chi/chi/v5"
	httpSwagger "github.com/swaggo/http-swagger/v2"
	"go.uber.org/zap"
	routes "wowcollector.io/api"
	_ "wowcollector.io/cmd/web/docs" // docs is generated by Swag CLI, you have to import it.
	"wowcollector.io/internal/repository"
	battlenethttp "wowcollector.io/internal/services/http/battle-net-http"
)

// @title wowcollector.io
// @version 1.0
// @description wowcollector.io API description
// @termsOfService http://swagger.io/terms/

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8888
func main() {
	logger, _ := zap.NewProduction()
	zap.ReplaceGlobals(logger)
	client := repository.GetDatabaseClient()
	defer func() {
		if err := client.Disconnect(context.TODO()); err != nil {
			zap.L().Fatal(err.Error())
		}
	}()
	repository.InitRepositories(client.Database(os.Getenv("DATABASE_NAME")))
	battlenethttp.GetInstance().Ping()

	r := chi.NewRouter()

	r.Get("/swagger/*", httpSwagger.Handler(
		httpSwagger.URL("http://localhost:8888/swagger/doc.json"), //The url pointing to API definition
	))

	routes.GetRoutes(r)

	zap.L().Info("Server up and running on 8888")
	http.ListenAndServe(":8888", r)
}
