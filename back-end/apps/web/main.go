package main

import (
	"context"
	"fmt"
	"log"
	"log/slog"
	"net/http"
	"os"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/go-chi/httplog/v2"
	httpSwagger "github.com/swaggo/http-swagger/v2"
	_ "wowcollector.io/docs" // docs is generated by Swag CLI, you have to import it.
	"wowcollector.io/repository"
	"wowcollector.io/routes"
)

// @title wowcollector.io
// @version 1.0
// @description wowcollector.io API description
// @termsOfService http://swagger.io/terms/

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8888
func main() {
	client := repository.GetDatabaseClient()
	defer func() {
		if err := client.Disconnect(context.TODO()); err != nil {
			log.Fatal(err)
		}
	}()
	repository.InitRepositories(client.Database(os.Getenv("DATABASE_NAME")))

	logger := httplog.NewLogger("httplog-example", httplog.Options{
		JSON:             true,
		LogLevel:         slog.LevelDebug,
		Concise:          true,
		RequestHeaders:   true,
		MessageFieldName: "message",
		Tags: map[string]string{
			"version": "v1.0.0",
			"env":     "dev",
		},
		QuietDownRoutes: []string{
			"/",
			"/ping",
		},
		QuietDownPeriod: 10 * time.Second,
	})

	r := chi.NewRouter()
	r.Use(httplog.RequestLogger(logger))

	r.Get("/swagger/*", httpSwagger.Handler(
		httpSwagger.URL("http://localhost:8888/swagger/doc.json"), //The url pointing to API definition
	))

	routes.GetRoutes(r)

	fmt.Println("Server up and running on 8888")
	http.ListenAndServe(":8888", r)
}
