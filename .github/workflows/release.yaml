name: Release Version

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'The type of release: major, minor, patch'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Read current version
      id: read_version
      run: echo "current_version=$(cat version.txt)" >> $GITHUB_ENV

    - name: Run update version script
      shell: bash {0}
      run: |
        bash scripts/update-version.sh "${{ env.current_version }}" "${{ github.event.inputs.release_type }}"
        echo "new_version=$(cat version.txt)" >> $GITHUB_ENV


    - name: Create release folder
      id: create_release_folder
      run: |
        new_version="${{ env.new_version }}"
        timestamp=$(date +%s)
        release_folder="changelog/releases/${new_version}-${timestamp}"
        mkdir -p "$release_folder"
        echo "release_folder=$release_folder" >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        
    - name: Build and push - server
      uses: docker/build-push-action@v5
      with:
        context: ./back-end/
        file: ./back-end/DockerfileRest
        push: true
        tags: tovven/wowcollector:server-${{ env.new_version }}
        
    - name: Build and push - scanner
      uses: docker/build-push-action@v5
      with:
        context: ./back-end/
        file: ./back-end/DockerfileScanner
        push: true
        tags: tovven/wowcollector:scanner-${{ env.new_version }}
        
    - name: Build and push - web
      uses: docker/build-push-action@v5
      env:
        NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_OVERPAID }}
      with:
        context: ./front-end/
        file: ./front-end/DockerfileNuxt
        push: true
        tags: tovven/wowcollector:web-${{ env.new_version }}

    - name: Move JSON files to release folder
      run: |
        mv changelog/current/*.json "${{ env.release_folder }}/" 2>/dev/null

    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        git add .
        git commit -m "Release ${{ env.new_version }}"
        git push origin main

    - name: Create a new tag
      run: |
        git tag "release-${{ env.new_version }}"
        git push origin "release-${{ env.new_version }}"
      
