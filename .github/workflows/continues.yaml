name: Continues

on:
  push:
    branches:
      - develop

jobs:
  continues:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Cancel if commit was made by github-actions[bot]
      id: check-committer
      run: |
        COMMITTER=$(git log -1 --pretty=format:'%cn')
        echo "Commit made by: $COMMITTER"
        if [ "$COMMITTER" = "github-actions[bot]" ]; then
          echo "This commit was made by github-actions[bot]. Cancelling the workflow."
          exit 1
        fi

    - name: Create release folder
      id: create_release_folder
      run: |
        timestamp=$(date +%s)
        release_folder="front-end/changelog/releases/latest-${timestamp}"
        mkdir -p "$release_folder"
        echo "release_folder=$release_folder" >> $GITHUB_ENV

    - name: Move JSON files to release folder
      run: |
        mv front-end/changelog/current/*.json "${{ env.release_folder }}/" 2>/dev/null

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push - server
      uses: docker/build-push-action@v5
      with:
        context: ./back-end/
        file: ./back-end/DockerfileRest
        push: true
        tags: tovven/wowcollector:server-latest

    - name: Build and push - scanner
      uses: docker/build-push-action@v5
      with:
        context: ./back-end/
        file: ./back-end/DockerfileScanner
        push: true
        tags: tovven/wowcollector:scanner-latest

    - name: Build and push - web
      uses: docker/build-push-action@v5
      with:
        context: ./front-end/
        file: ./front-end/DockerfileNuxt
        push: true
        tags: tovven/wowcollector:web-latest
        build-args: |
          "NUXT_UI_PRO_LICENSE=${{ secrets.NUXT_OVERPAID }}"
    
    - name: Update staging files
      run: |
        sed -i "s|{{clientId}}|${{ secrets.STAGING_BATTLE_NET_CLIENT_ID }}|g" integration/staging/credentials.yaml
        sed -i "s|{{secret}}|${{ secrets.STAGING_BATTLE_NET_SECRET }}|g" integration/staging/credentials.yaml
        sed -i "s|{{scannerClientId}}|${{ secrets.STAGING_BATTLE_NET_SCANNER_CLIENT_ID }}|g" integration/staging/credentials.yaml
        sed -i "s|{{scannerSecret}}|${{ secrets.STAGING_BATTLE_NET_SCANNER_SECRET }}|g" integration/staging/credentials.yaml

        sed -i "s|{{password}}|${{ secrets.STAGING_MONGODB_PASSWORD }}|g" integration/staging/mongodb-credentials.yaml

        sed -i "s|{{hash}}|$GITHUB_SHA|g" integration/staging/manifest.yaml
        sed -i "s|{{googleTagId}}|${{ secrets.GOOGLE_TAG_ID_STAGING }}|g" integration/staging/manifest.yaml

    - name: Apply mongodb credentials
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: apply -f integration/staging/mongodb-credentials.yaml

    - name: Apply mongodb manifest
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: apply -f integration/staging/mongodb-manifest.yaml

    - name: Apply credentials
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: apply -f integration/staging/credentials.yaml

    - name: Apply manifest
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: apply -f integration/staging/manifest.yaml

